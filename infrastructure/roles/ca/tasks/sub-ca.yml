---
- name: Ensure input vars are set
  assert:
    that:
      - "ca_name is defined"
      - "common_name is defined"
      - signing_ca is defined

- name: Create Intermediate Certificate Authority
  environment:
    CA_NAME: "{{ ca_name }}"
    CN: "{{ common_name }}"
    CA_HOME: "{{ ca_home }}"
  vars:
    csr_path: "{{ ca_home }}/{{ ca_name }}.csr"
  block:
    - name: Set up Intermediate CA data directories
      include_tasks: 'directory.yml'

    - name: Ask for passphrase
      pause:
        prompt: "Would you like to add a passphrase to the private key? ([Enter] to skip): "
        echo: false
      register: pk_passphrase
      when: pk_passphrase not defined

    - name: Generate private key and certificate signing request
      command:
        cmd: >-
          openssl req
          -batch
          -new
          -config {{ role_path }}/files/ca.conf
          -out {{ csr_path }}
          -keyout {{ ca_private_keyfile }}
          -extensiosn ca_ext
          -extensions sub_ca_ext
          {% if signing_ca == 'root-ca' %}
          -copy_extensions copy
          {% endif %}
          {% if pk_passphrase is defined -%}
            -passin stdin
          {% else -%}
            -noenc
          {% endif %}
        stdin: "{{ pk_passphrase is string | ternary(pk_passphrase, pk_passphrase.user_input )}}"
        stdin_add_newline: false

  always:
    - name: Undefine passphrase input
      set_fact:
        pk_passphrase:

- name: Issue Certificate
  include_tasks: issue-cert
  vars:
    purpose: ca

- name: Save CA certificate as sops file in repo
  vars:
    sops_file: "{{ (pki_home, outfile | basename ) | path_join }}"
  tags:
    - sops
  block:
    - name: Make SOPS file
      community.sops.sops_encrypt:
        path: "{{ sops_file }}"
        content_text: "{{ item }}"
      with_file:
        - "{{ outfile }}"

    - name: Commit and push sops file
      lvrfrc87.git_acp.git_acp:
        path: "{{ root_dir }}"
        add:
          - "{{ sops_file }}"
        comment: "Adding {{ ca_name }} Intermediate CA Certificate"
        url: "{{ git_repo_url }}"
        push: true
        branch: "{{ git_branch }}"
