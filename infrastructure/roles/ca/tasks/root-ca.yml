---
- name: Set facts
  set_fact:
    ca_name: "{{ root_ca_cn }}"

- name: Create new crypto device for offline CA
  import_role:
    name: crypto_device
  vars:
    cmd: create
  delegate_to: parche

- name: Open crypto device
  include_role:
    name: crypto_device
  vars:
    cmd: open

- name: Copy config files
  copy:
    dest: "{{ pki_home }}"
    src: "{{ item }}"
  with_fileglob:
    - "*.conf"

- name: Root CA initial setup
  include_tasks: 'directory.yml'

- name: Ask for passphrase
  pause:
    prompt: "Passphrase to the private key? ([Enter] to skip): "
    echo: false
  register: pk_passphrase_input
  no_log: true
  when: 
    - pk_passphrase is not defined or pk_passphrase != ''

- name: Create Root Certificate Authority
  become: true
  environment:
    PKI_HOME: "{{ pki_home }}"
    CA_NAME: "{{ ca_name }}"
  vars:
    privatekey: >-
      {% if pk_passphrase is defined and pk_passphrase != '' %}
      {{ pk_passphrase }}
      {% elif 'user_input' in pk_passphrase_input and pk_passphrase_input.user_input != '' %}
      {{ pk_passphrase_input.user_input }}
      {% endif %}
  block:
    - name: Create Private Key and CSR
      command:
        cmd: >-
          openssl req
          -new
          -config {{ pki_home }}/ca.conf
          -config {{ pki_home }}/req.conf
          -addext basicConstraints=critical,CA:true
          -out {{ ca_home }}/root-ca.csr
          -subj '/C=US/O=HERMLEIGH.HOME/OU={{ root_ca_ou }}/CN={{ root_ca_cn }}'
          -passout stdin
          {% if ca_private_keyfile is exists %}
            -key {{ ca_private_keyfile }}
            -passin stdin
          {% else %}
            -keyout {{ ca_private_keyfile }}
            -newkey ed25519
          {% endif %}
        stdin: "{{ privatekey }}"
        stdin_add_newline: false
        creates: "{{ ca_home }}/root-ca.csr"
      register: req

    - name: Issue new Certificate
      command:
        cmd: >-
          openssl ca
          -batch
          -selfsign
          -config {{ pki_home }}/ca.conf
          -in {{ ca_home }}/root-ca.csr
          -out {{ ca_home }}/ca.crt
          -extensions ca_ext
          -notext
          -passin stdin
          -days 3650
          -crldays 365
        stdin: "{{ privatekey }}"
        stdin_add_newline: false
        creates: "{{ ca_home }}/ca.crt"
      when: req is success

    # - name: Remove root-ca.csr
    #   file:
    #     path: root-ca.csr
    #     state: absent

# - name: Save and commit cert
#   when: commit_ca | default(false)
#   block:
- name: Read cert file
  slurp:
    src: "{{ ca_home }}/ca.crt"
  register: crt
  no_log: true

- name: Write SOPS file
  delegate_to: localhost
  become: false
  community.sops.sops_encrypt:
    path: "{{ pki_dir }}/root-ca.sops.yml"
    owner: "{{ lookup('pipe','id -u') }}"
    group: "{{ lookup('pipe','id -g') }}"
    content_yaml:
      root_ca:
        crt: "{{ crt.content }}"
      # vars:
      #   git_commit_comment: "Adding root-ca CA Certificate file"
      #   git_add_file_list: "{{ pki_dir }}/root-ca.sops.yml"
      #   git_push: false
