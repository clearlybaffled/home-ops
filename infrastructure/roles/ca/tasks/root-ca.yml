---
- name: Set CA name
  set_fact:
    ca_name: root-ca

- name: Set up Root CA data directories
  include_tasks: 'directory.yml'

- name: Create Root Certificate Authority
  environment:
    CA_HOME: "{{ ca_home }}"
    CN: "{{ root_ca_cn }}"
  block:
    - name: Request passphrase for private key
      pause:
        prompt: "Enter a passphrase for the Private Key: "
        echo: false
      when: pk_passphrase not defined or pk_passphrase == ''
      register: pk_passphrase
      until: pk_passphrase.user_input != ''

    - name: Create Private Key and CSR
      command:
        cmd: >-
          openssl req
          -batch
          -new
          -config {{ role_path }}/files/ca.conf
          -keyout {{ ca_private_keyfile }}
          -out {{ ca_home }}/root-ca.csr
          -extensions ca_ext
          -passin stdin
        stdin: "{{ pk_passphrase is string | ternary(pk_passphrase, pk_passphrase.user_input )}}"
        stdin_add_newline: false

    - name: Sign CSR
      command:
        cmd: >-
          openssl ca
          -batch
          -selfsign
          -config {{ role_path }}/files/ca.conf
          -in {{ ca_home }}/root-ca.csr
          -out {{ ca_home }}/root-ca.crt
          -extensions ca_ext
          -passin stdin
          -days 3650
          -crldays 365
          -policy policy_c_o_match
        stdin: "{{ pk_passphrase is string | ternary(pk_passphrase, pk_passphrase.user_input )}}"
        stdin_add_newline: false

  always:
    - name: Undefine passphrase input
      set_fact:
        pk_passphrase:
