---
- name: Cache DB credentials
  set_fact:
    mysql_root: "{{ query('kubernetes.core.k8s', kind='Secret', namespace='db', resource_name='mysql')[0].data }}"
    postgres_admin: "{{ query('kubernetes.core.k8s', kind='Secret', namespace='db', resource_name='cnpg-cluster-superuser')[0].data }}"

- name: Install sops-age-key secret to ArgoCD Namespace for KSOPS
  kubernetes.core.k8s:
    api_version: v1
    kind: Secret
    namespace: argocd
    name: sops-age-key
    definition:
      data:
        keys.txt: "{{ lookup('file', lookup('env','SOPS_AGE_KEY_FILE')) | b64encode }}"

- name: Install Application specific configurations and files
  include_tasks: application.yml
  when: item.value.createApp is not defined or item.value.createApp
  loop: "{{ (apps | items | selectattr('1.wave','defined') | sort(attribute='1.wave')) + (apps|items|rejectattr('1.wave','defined'))}}"
  loop_control:
    label: "{{ item.0 }}"
  vars:
    app: "{{ item.1 | combine({'name': item.0}) }}"
    app_dir: >-
      {{ (
          cluster_dir,
          (item.0 == 'argocd') | ternary('', 'apps'),
          ('path' in item.1) | ternary(item.1.path, item.1.namespace),
          item.0
        ) | path_join
      }}
    manifest_file: >-
      {{ (
          cluster_dir,
          'manifests',
          ('path' in app) | ternary(app.path, app.namespace),
          app.name+'.yaml'
        ) | path_join
      }}

# - name: Bootstrap cluster
#   kubernetes.core.k8s:
#     src: "{{ (cluster_dir, 'cluster.yaml') | path_join }}"
#     server_side_apply:
#       field_manager: ansible
#   tags: bootstrap
