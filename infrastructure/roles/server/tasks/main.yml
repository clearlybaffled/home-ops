---
# Some Debian based distros ship without Python installed
- name: Check if bootstrap is needed
  raw: which python3
  register: need_bootstrap
  failed_when: false
  changed_when: false
  # This command should always run, even in check mode
  check_mode: false
  tags:
    - facts

- name: Locale
  block:
    - name: Locale | Set timezone
      community.general.timezone:
        name: "{{ timezone | default('Etc/UTC') }}"

- name: Networking
  block:
    - name: Networking | Set hostname to inventory hostname
      hostname:
        name: "{{ inventory_hostname }}"
    - name: Networking | Update /etc/hosts to include inventory hostname
      blockinfile:
        path: /etc/hosts
        block: |
          127.0.1.1   {{ inventory_hostname }}

- name: Mount configuration
  ansible.posix.mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    state: "{{ item.state }}"
    fstype: "{{ item.fstype }}"
    opts: "{{ item.opts }}"
  loop: "{{ mounts | default({}) }}"
  when: item.use | default(true)

- name: Create local ansible user
  include_role:
    name: user
    tasks_from: system-user.yml

- name: Perms on /usr/local/bin
  file:
    dest: /usr/local/bin
    state: directory
    owner: root
    group: sys
    mode: "0775"

- name: Disable sshd password authentication for root
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?PermitRootLogin'
    line: 'PermitRootLogin prohibit-password'

- name: Ensure bash_completion.d folder exists
  file:
    name: /etc/bash_completion.d/
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Set console for High DPI monitor
  blockinfile:
    path: /etc/default/console-setup
    state: present
    block: |
      CODESET="Uni3"
      FONTFACE="Terminus"
      FONTSIZE="32x16"

- name: Run package install
  include_tasks: packages.yml

- name: Manage IP addresses on parche
  when: inventory_hostname == 'parche'
  block:
    - name: parche | Manage interface config file
      blockinfile:
        path: /etc/network/interfaces.d/enp0s31f6.cfg
        create: true
        content: |-
          # The primary network interface
          #allow-hotplug enp0s31f6
          auto enp0s31f6
          iface enp0s31f6 inet static
            address 172.16.1.10
            netmask 255.255.255.0
            gateway 172.16.1.1
            dns-domain hermleigh.home
            dns-nameservers 172.16.1.1
          
          # Kubernetes control plane interface
          auto enp9s0
          iface enp9s0 inet static
            address 172.16.1.11
            netmask 255.255.255.0
            gateway 172.16.1.1
      register: iface_cfg

    - name: restart services # noqa no-handler
      service:
        name: networking
        state: restarted
      when: iface_cfg is changed

- name: Load Root CA into system ca trust store
  copy:
    dest: "/usr/local/share/ca-certificates/{{ domain_name }}-root.crt"
    content: "{{ root_ca.crt | b64decode }}"
  notify:
    - "update ca truststore"
