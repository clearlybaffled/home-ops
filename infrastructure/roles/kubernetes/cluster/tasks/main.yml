---
- name: Install Kustomization files for each app
  blockinfile:
    block: "{{ lookup('template', 'kustomization.j2', convert_data=false) }}"
    dest: "{{ (root_dir, 'cluster', (app.path | default('') | split('/')), app.name, 'kustomization.yaml') | flatten | path_join }}"
    mode: "0644"
    create: true
  register: kustomize
  loop: "{{ apps |flatten(levels=1) }}"
  loop_control:
    loop_var: app
  tags:
    - manifests

- name: Commit changes to Kustomization files, if necessary # noqa no-handler
  lvrfrc87.git_acp.git_acp:
    path: "{{ root_dir }}" # noqa jinja
    comment: "Updated ArgoCD kustomization files" # \n{{ changed_list | to_yaml }}
    add: "{{ changed_list }}"
    url: "ssh://github.com/clearlybaffled/homelab"
    push: true
    ssh_params:
      key_file: "/home/jared/.ssh/github_clearlybaffled"
  when: kustomize is changed
  vars:
    changed_list: "{{ kustomize.results | select('changed') | map(attribute='invocation.module_args.dest') | map('relpath',root_dir)}}"
  tags:
    - manifests

- name: Create argocd namespace
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cacerts }}"
    api_version: v1
    kind: Namespace
    inline: |-
      metadata:
        name: argocd

- name: Start ArgoCD
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cacerts }}"
    src: "{{ argocd_manifest }}"
    namespace: argocd

# - name: Wait for all argocd crds to load
#   command: |-
#     kubectl -n argocd wait --timeout=60s --for condition=Established \
#       crd/applications.argoproj.io \
#       crd/applicationsets.argoproj.io

- name: Configure ArgoCD to use helm with kustomize
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cacerts }}"
    state: present
    namespace: argocd
    name: argocd-cm
    api_version: v1
    kind: ConfigMap
    definition:
      data:
        kustomize.buildOptions: --enable-helm

# - name: Change ArgoCD Server to LoadBalancer
#   kubernetes.core.k8s_service:
#     name: argocd-server
#     namespace: argocd
#     definition:
#       spec:
#         type: LoadBalancer
#         ports:
#           - name: http
#             port: 80
#             protocol: TCP
#             targetPort: 8080
#           - name: https
#             port: 443
#             protocol: TCP
#             targetPort: 8080

# - name: Boostrap cluster
#   kubernetes.core.k8s:
#     src: argocd.yaml
