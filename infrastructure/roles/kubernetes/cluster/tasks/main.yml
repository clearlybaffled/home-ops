---
- name: Create argocd namespace
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cacerts }}"
    api_version: v1
    kind: Namespace
    inline: |-
      metadata:
        name: argocd

- name: Start ArgoCD
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cacerts }}"
    src: "{{ argocd_manifest }}"
    namespace: argocd

# - name: Wait for all argocd crds to load
#   command: |-
#     kubectl -n argocd wait --timeout=60s --for condition=Established \
#       crd/applications.argoproj.io \
#       crd/applicationsets.argoproj.io

- name: Configure ArgoCD to use helm with kustomize
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cacerts }}"
    state: present
    namespace: argocd
    name: argocd-cm
    api_version: v1
    kind: ConfigMap
    definition:
      data:
        kustomize.buildOptions: --enable-helm

- name: argocd server insecure
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cacerts }}"
    state: present
    namespace: argocd
    name: argocd-cmd-params-cm
    api_version: v1
    kind: ConfigMap
    definition:
      data:
        server.insecure: "true"

# - name: Change ArgoCD Server to LoadBalancer
#   kubernetes.core.k8s_service:
#     name: argocd-server
#     namespace: argocd
#     definition:
#       spec:
#         type: LoadBalancer
#         ports:
#           - name: http
#             port: 80
#             protocol: TCP
#             targetPort: 8080
#           - name: https
#             port: 443
#             protocol: TCP
#             targetPort: 8080

# - name: Boostrap cluster
#   kubernetes.core.k8s:
#     src: argocd.yaml
