---
- block: # noqa name
    - name: user | Generate private key
      community.crypto.openssl_privatekey_pipe:
        type: RSA
        size: 4096
      register: private_key

    - name: user | Generate CSR
      community.crypto.openssl_csr_pipe:
        privatekey_content: "{{ private_key.privatekey }}"
        common_name: "{{ kube_user }}"
        organization_name: service:masters
      register: csr

    - name: user | Process user request on control plane
      delegate_to: "{{ groups['kube_control_plane'][0] }}"
      become: true
      block:
        - name: user | Create ClusterRoleBinding and submit CSR
          kubernetes.core.k8s:
            kubeconfig: "{{ kubeconfig_file }}"
            template: create-user.yml.j2

        - name: user | Approve CSR
          command: "{{ kubectl }} certificate approve {{ kube_user }}-csr"
          register: approve_csr
          failed_when: approve_csr.rc != 0

        - name: user | Get Signed certificate
          command: "{{ kubectl }} get csr {{ kube_user }}-csr -o jsonpath='{.status.certificate}'"
          register: crt
          until: crt.stdout is ne ""
          retries: 10
          delay: 5

        - name: user | get kubernetes cluster ca file
          slurp:
            src: "{{ kube_apiserver_client_cert }}"
          register: ca_file_data
        - name: user | save ca data as fact
          set_fact:
            cluster_ca_data: "{{ ca_file_data.content  | replace('\n','') }}"

    - name: user | Create kubeconfig file
      set_fact:
        kubeconfig: "{{ lookup('ansible.builtin.template', 'kubeconfig.yml.j2') }}"

  always:
    - name: Make sure that output (which contains the private key) is overwritten
      set_fact:
        private_key: ''
        csr: ''
        crt: ''
