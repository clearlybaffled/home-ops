apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ kube_apiserver_ip }}
  bindPort: {{ kube_apiserver_port }}
nodeRegistration:
  criSocket: {{ cri_socket }}
  imagePullPolicy: {{ k8s_image_pull_policy }}
{% if kube_override_hostname|default('') %}  
  name: {{ kube_override_hostname }}
{% endif %}
  kubeletExtraArgs:
    node-labels: "{{ node_labels | join(',') }}"
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
clusterName: {{ cluster_name }}
apiServer:
  timeoutForControlPlane: 4m0s
certificatesDir: {{ kube_cert_dir }}
controlPlaneEndpoint: {{ ip | default(fallback_ips[inventory_hostname]) }}:{{ kube_apiserver_port }}
imageRepository: {{ kube_image_repo }}
controllerManager: 
 extraArgs:
    cluster-cidr: "{{ kube_pods_subnet }}"
    service-cluster-ip-range: "{{ kube_service_addresses }}"
    node-cidr-mask-size: "{{ kube_network_node_prefix }}"
dns:
  imageRepository: {{ coredns_image_repo | regex_replace('/coredns(?!/coredns).*$','') }}
  imageTag: {{ coredns_image_tag }}
etcd:
  local:
    dataDir: {{ etcd_data_dir }}
imageRepository: registry.k8s.io
kubernetesVersion: {{ kube_version }}
networking:
  dnsDomain: {{ dns_domain }}
  serviceSubnet: {{ kube_service_addresses }}
  podSubnet: {{ kube_pods_subnet }}
kubernetesVersion: {{ kube_version }}
scheduler: {}
