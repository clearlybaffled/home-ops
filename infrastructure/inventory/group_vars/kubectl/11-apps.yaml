# yaml-language-server: $schema=../../../../schemas/apps.schema.json
---
apps:
  argocd:
    namespace: argocd
    wave: "0"
    path: ''
    kustomize:
      charts:
        - chart: argocd/argo-cd
          version: "{{ argocd_chart_version }}"
          namespace: argocd
          release: argocd
      extras:
        patches:
          - patch: |-
              - op: add
                path: /spec/template/spec/containers/0/env/-
                value: { name: ARGOCD_SYNC_WAVE_DELAY, value: '30' }
            target:
              version: v1
              group: apps
              kind: StatefulSet
              name: argocd-application-controller
              labelSelector: "app.kubernetes.io/name=argocd-application-controller"

  external-dns:
    namespace: infrastructure
    wave: "1"
    charts:
      - chart: external-dns/external-dns
        version: "{{ external_dns_chart_version }}"
    secrets:
      secret: {}

  kube-prometheus-stack:
    namespace: monitoring
    wave: "1"
    charts:
      - chart: prometheus-community/kube-prometheus-stack
        version: "{{ kube_prometheus_stack_chart_version }}"
        release: prometheus
        valueFiles:
          - operator.yaml
      - chart: prometheus-community/prometheus-adapter
        version: "{{ prometheus_adapter_chart_version }}"
        valueFiles:
          - adapter.yaml
    kustomize:
      resources:
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml"
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml"
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml"
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml"
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_prometheusagents.yaml"
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml"
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml"
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_scrapeconfigs.yaml"
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml"
        - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml"

  hajimari:
    namespace: services
    wave: "4"
    charts:
      - chart: hajimari/hajimari
        version: "{{ hajimari_version }}"

  cloudnative-pg:
    namespace: db
    wave: "3"
    charts:
      - chart: cnpg/cloudnative-pg
        version: "{{ cnpg_chart_version }}"
    kustomize:
      resources:
        - ./cluster.yaml
        - https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/prometheusrule.yaml
        - https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-configmap.yaml
    secrets:
      superuser:
        type: basic-auth
        data:
          username: postgres
          password:
            name: admin
            type: password
      app-user:
        type: basic-auth
        data:
          username: app
          password:
            type: password

  mysql:
    namespace: db
    wave: "3"
    pv: true
    charts:
      - chart: bitnami/mysql
        version: "{{ bitnami_mysql_chart_version }}"
    kustomize:
      resources:
        - ./pvc.yaml
        - ./pv.yaml
    secrets:
      secret: {}

  cert-manager:
    path: infrastructure
    namespace: cert-manager
    wave: "1"
    charts:
      - chart: jetstack/cert-manager
        version: "{{ cert_manager_version }}"

  ingress-nginx:
    namespace: infrastructure
    wave: "1"
    charts:
      - chart: ingress-nginx/ingress-nginx
        version: "{{ ingress_nginx_version }}"

  metallb:
    path: infrastructure
    namespace: metallb-system
    wave: "1"
    charts:
      - chart: metallb/metallb
        version: "{{ metallb_version[1:] }}"

  redis:
    namespace: db
    wave: "0"
    charts:
      - chart: bitnami/redis
        version: "{{ bitnami_redis_chart_version }}"

  rook-ceph:
    path: infrastructure
    namespace: rook-ceph
    wave: "2"
    charts:
      - chart: rook/rook-ceph
        version: "{{ rook_ceph_version }}"
        valueFiles:
          - operator.yaml
      - chart: rook/rook-ceph-cluster
        version: "{{ rook_ceph_version }}"
        valueFiles:
          - ceph-cluster.yaml

  paperless-ngx:
    namespace: services
    wave: "4"
    charts:
      - chart: app-template
    secrets:
      secret:
        data:
          PAPERLESS_DBUSER: paperless
          PAPERLESS_DBPASS:
            type: password
            name: db
          PAPERLESS_ADMIN_USER: admin
          PAPERLESS_ADMIN_PASSWORD:
            type: password
            name: admin

  nextcloud:
    namespace: services
    wave: "4"
    charts:
      - chart: nextcloud/nextcloud
        version: "{{ nextcloud_chart_version }}"
    secrets:
      secret:
        data:
          nextcloud-username: admin
          nextcloud-password:
            type: password
            name: admin
          db-username: nextcloud
          db-password:
            type: password
            name: db

  mealie:
    namespace: services
    wave: "4"
    charts:
      - chart: app-template
    secrets:
      secret:
        data:
          POSTGRES_USER: mealie
          POSTGRES_PASSWORD:
            type: password
            name: db


  linkding:
    namespace: services
    charts:
      - chart: app-template
    secrets:
      secret:
        data:
          LD_DB_USER: linkding
          LD_DB_PASSWORD:
            type: password
            name: db
          LD_SUPERUSER_NAME: admin
          LD_SUPERUSER_PASSWORD:
            type: password
            name: admin

  linkace:
    namespace: services
    charts:
      - chart: app-template
    kustomize:
      extras:
        configMapGenerator:
          - name: nginx-config
            files:
              - nginx.conf
            options:
              disableNameSuffixHash: true
    secrets:
      secret:
        data:
          DB_USERNAME: linkace
          DB_PASSWORD:
            type: password
            name: db

  linkwarden:
    namespace: services
    charts:
      - chart: app-template
    secrets:
      secret:
        data:
          DB_USER: linkwarden
          DB_PASS:
            type: password
            name: db
          NEXTAUTH_SECRET:
            type: password
            name: nextauth
      db_url: {}

  calibre:
    namespace: media
    charts:
      - chart: app-template
        release: calibre
      - chart: app-template
        release: calibre-web
        valueFiles:
          - values-web.yaml

  qbittorrent:
    namespace: downloads
    charts:
      - chart: app-template

  sonarr:
    namespace: downloads
    charts:
      - chart: app-template
    secrets:
      secret:
        data:
          SONARR__API_KEY:
            type: password
            name: api
          SONARR__POSTGRES_USER: sonarr
          SONARR__POSTGRES_PASSWORD:
            type: password
            name: pgpass
          SONARR__POSTGRES_MAIN_DB: sonarr_main
          SONARR__POSTGRES_LOG_DB: sonarr_log
  radarr:
    namespace: downloads
    charts:
      - chart: app-template
    secrets:
      secret:
        data:
          RADARR__API_KEY:
            type: password
            name: api
          RADARR__POSTGRES_USER: radarr
          RADARR__POSTGRES_PASSWORD:
            type: password
            name: pgpass
          RADARR__POSTGRES_MAIN_DB: radarr_main
          RADARR__POSTGRES_LOG_DB: radarr_log

  readarr:
    namespace: downloads
    charts:
      - chart: app-template
    secrets:
      secret:
        data:
          READARR__API_KEY:
            type: password
            name: api
          READARR__POSTGRES_USER: readarr
          READARR__POSTGRES_PASSWORD:
            type: password
            name: pgpass
          READARR__POSTGRES_MAIN_DB: readarr_main
          READARR__POSTGRES_LOG_DB: readarr_log

  prowlarr:
    namespace: downloads
    charts:
      - chart: app-template
    secrets:
      secret:
        data:
          PROWLARR__API_KEY:
            type: password
            name: api
          PROWLARR__POSTGRES_USER: prowlarr
          PROWLARR__POSTGRES_PASSWORD:
            type: password
            name: pgpass
          PROWLARR__POSTGRES_MAIN_DB: prowlarr_main
          PROWLARR__POSTGRES_LOG_DB: prowlarr_log

  lidarr:
    namespace: downloads
    charts:
      - chart: app-template
    secrets:
      secret:
        data:
          LIDARR__API_KEY:
            type: password
            name: api
          LIDARR__POSTGRES_MAIN_DB: lidarr_main
          LIDARR__POSTGRES_LOG_DB: lidarr_log
          LIDARR__POSTGRES_USER: lidarr
          LIDARR__POSTGRES_PASSWORD:
            type: password
            name: postgres

  netbox:
    namespace: infrastructure
    charts:
      - chart: bootc/netbox
        version: "{{ netbox_chart_version }}"
    kustomize:
      resources:
        - ./graphite/
    secrets:
      secret:
        data:
          db_user: netbox
          db_password:
            type: password
            name: db
          secret_key:
            type: key
            name: api
          superuser_password:
            type: password
            name: superuser
          superuser_api_token:
            type: key
            name: superuser_api
          ldap_bind_password: ''
          email_password: ''
          redis_tasks_password: ''
          redis_cache_password: ''
          napalm_password: ''

  audiobookshelf:
    namespace: media
    charts:
      - chart: app-template

  homepage:
    namespace: services
    charts:
      - chart: jameswynn/homepage
        version: "{{ homepage_chart_version }}"

  keycloak:
    namespace: infrastructure
    kustomize:
      resources:
        - https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{{ keycloak_version }}/kubernetes/keycloaks.k8s.keycloak.org-v1.yml
        - https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{{ keycloak_version }}/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml
        - https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{{ keycloak_version }}/kubernetes/kubernetes.yml
        - ./keycloak.yaml
        - ./ingress.yaml
    secrets:
      secret:
        data:
          username: keycloak
          password:
            type: password
            name: db
