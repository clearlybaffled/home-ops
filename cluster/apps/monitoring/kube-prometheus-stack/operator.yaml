## Provide a name to substitute for the full names of resources
##
fullnameOverride: kube-prometheus
cleanPrometheusOperatorObjectNames: true

## Install Prometheus Operator CRDs
##
crds:
  enabled: false

alertmanager:
  ingress:
    enabled: true

    # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: ca-issuer
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: "Monitoring"
      gethomepage.dev/icon: alertmanager.png
      gethomepage.dev/name: Alertmanager
    hosts: &alert-mgr-hosts
      - alertmanager.seawolf.hermleigh.home
      - alertmanager.seawolf

    ## Paths to use for ingress rules - one path should match the alertmanagerSpec.routePrefix
    ##
    paths:
      - /

    ## For Kubernetes >= 1.18 you should specify the pathType (determines how Ingress paths should be matched)
    ## See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#better-path-matching-with-path-types
    pathType: Prefix

    ## TLS configuration for Alertmanager Ingress
    ## Secret must be manually created in the namespace
    ##
    tls:
      - secretName: alertmanager-general-tls
        hosts: *alert-mgr-hosts

grafana:
  enabled: false
  forceDeployDashboards: true

## Manages Prometheus and Alertmanager components
##
prometheusOperator:
  enabled: true
  ## Admission webhook support for PrometheusRules resources added in Prometheus Operator 0.30 can be enabled to prevent incorrectly formatted
  ## rules from making their way into prometheus and potentially preventing the container from starting
  admissionWebhooks:
    # Use certmanager to generate webhook certs
    certManager:
      enabled: true
      issuerRef:
        name: "ca-issuer"
        kind: "ClusterIssuer"

prometheus:
  prometheusSpec:
    priorityClassName: platform-cluster-critical
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    additionalScrapeConfigs:
      - job_name: "cri-o-exporter-parche"
        scrape_interval: 1s
        metrics_path: /parche
        static_configs:
          - targets: ["cri-o-metrics-exporter.cri-o-metrics-exporter"]
            labels:
              instance: "parche"
  service:
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: ca-issuer
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: "Monitoring"
        gethomepage.dev/icon: prometheus.png
        gethomepage.dev/name: Prometheus
    hosts: &prom-hosts
      - prometheus.seawolf.hermleigh.home
      - prometheus.seawolf
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: prometheus-general-tls
        hosts: *prom-hosts

prometheus-node-exporter:
  prometheus:
    monitor:
      # from: https://github.com/prometheus-community/helm-charts/issues/3613#issuecomment-1837318437
      attachMetadata:
        node: true
      ## RelabelConfigs to apply to samples before scraping
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#relabelconfig
      ##
      relabelings:
        - sourceLabels: [__meta_kubernetes_pod_node_name]
          separator: ;
          regex: ^(.*)$
          targetLabel: nodename
          replacement: $1
          action: replace

kube-state-metrics:
  verticalPodAutoscaler:
    enabled: false
  # REQUIRED kube-state-metrics must be configured to enable Vertical Pod Autoscalar metrics.
  # https://github.com/prometheus-community/helm-charts/blob/cbbc1d6965d5f90c31bb7dd08ecab09e59544a65/charts/kube-state-metrics/values.yaml#L311
  collectors:
    - certificatesigningrequests
    - configmaps
    - cronjobs
    - daemonsets
    - deployments
    - endpoints
    - horizontalpodautoscalers
    - ingresses
    - jobs
    - leases
    - limitranges
    - mutatingwebhookconfigurations
    - namespaces
    - networkpolicies
    - nodes
    - persistentvolumeclaims
    - persistentvolumes
    - poddisruptionbudgets
    - pods
    - replicasets
    - replicationcontrollers
    - resourcequotas
    - secrets
    - services
    - statefulsets
    - storageclasses
    - validatingwebhookconfigurations
    - volumeattachments
    - verticalpodautoscalers
