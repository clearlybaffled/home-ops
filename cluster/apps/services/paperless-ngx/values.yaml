global:
  nameOverride: paperless

controllers:
  main:
    type: deployment
    containers:
      main:
        nameOverride: paperless-ngx
        image:
          repository: ghcr.io/paperless-ngx/paperless-ngx
          tag: 2.6.2
        envFrom:
          - configMapRef:
              identifier: config
          - secretRef:
              name: paperless-ngx-secret
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
          limits:
            memory: 1Gi

      gotenberg:
        image:
          repository: gotenberg/gotenberg
          tag: 8.1.0
        imagePullPolicy: IfNotPresent
        env:
          - name: DISABLE_GOOGLE_CHROME
            value: "1"
        resources:
          requests:
            cpu: 10m
            memory: 256Mi
          limits:
            memory: 256Mi

      tika:
        image:
          repository: ghcr.io/paperless-ngx/tika
          tag: 2.9.1-full
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 10m
            memory: 256Mi
          limits:
            memory: 256Mi

      hp-scan-to:
        image: &hp-scan-to
          repository: manuc66/node-hp-scan-to
          tag: master
        env:
          - name: LABEL
            value: paperless-ngx
          - name: CMDLINE
            value: "-D -l paperless-ngx -r 300 -d /consume"
        envFrom:
          - configMapRef:
              name: hp-scan-to-env
        resources: &scan-limits
          limits:
            memory: 64Mi
          requests:
            cpu: 5m
            memory: 64Mi
      hp-scan-to-double-sided:
        image: *hp-scan-to
        envFrom:
          - configMapRef:
              name: hp-scan-to-env
        env:
          - name: LABEL
            value: paperless-ngx (double sided)
          - name: CMDLINE
            value: '-D -l paperless-ngx-double-sided -r 300 -d /consume/double-sided'
        resources: *scan-limits

configMaps:
  config:
    enabled: true
    data:
      PAPERLESS_CONSUMER_POLLING: "60"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
      PAPERLESS_CONSUMER_ENABLE_COLLATE_DOUBLE_SIDED: "true"
      PAPERLESS_CONSUMPTION_DIR: /library/consume
      PAPERLESS_DBENGINE: postgresql
      PAPERLESS_DBHOST: cnpg-cluster-rw.db.svc
      PAPERLESS_DATA_DIR: /library/data
      PAPERLESS_EXPORT_DIR: /library/export
      PAPERLESS_MEDIA_ROOT: /library/media
      PAPERLESS_TRASH_DIR: /trash
      PAPERLESS_OCR_LANGUAGE: eng
      PAPERLESS_OCR_MODE: skip
      PAPERLESS_OCR_ROTATE_PAGES: "true"
      PAPERLESS_OCR_IMAGE_DPI: "300"
      PAPERLESS_PORT: &port "8080"
      PAPERLESS_TASK_WORKERS: "2"
      PAPERLESS_TIME_ZONE: &tz America/New_York
      PAPERLESS_TIKA_ENABLED: "1"
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
      PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
      PAPERLESS_URL: https://paperless.hermleigh.home
      PAPERLESS_REDIS: redis://redis-master.db.svc:6379
      PAPERLESS_USE_X_FORWARD_HOST: "true"
      PAPERLESS_USE_X_FORWARD_PORT: "true"
      USERMAP_UID: "997"
      USERMAP_GID: "997"
      TZ: *tz

service:
  main:
    ports:
      http:
        port: *port
ingress:
  main:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/common-name: &host paperless.hermleigh.home
      cert-manager.io/subject-countries: US
      cert-manager.io/subject-organizations: "HERMLEIGH.HOME"
      cert-manager.io/subject-organizationalunits: "Kubernetes - Services"
      cert-manager.io/private-key-algorithm: ECDSA
      cert-manager.io/private-key-size: "512"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: "Apps & Services"
      gethomepage.dev/icon: paperless-ngx.png
      gethomepage.dev/description: "Scan, index and archive all your physical documents"
      gethomepage.dev/name: Paperless-NGX
    hosts:
      - host: *host
        paths:
          - path: /
            service:
              name: main
              port: http
    tls:
      - hosts:
          - *host
          - paperless
        secretName: paperless-tls-ingress

persistence:
  library:
    enabled: true
    existingClaim: paperless-library
    globalMounts:
      - path: /library
  trash:
    enabled: true
    type: emptyDir
    globalMounts:
      - path: /trash
  consume:
    type: persistentVolumeClaim
    existingClaim: paperless-consume
    advancedMounts:
      main:
        hp-scan-to:
          - path: /scan
        hp-scan-to-double-sided:
          - path: /scan
            subPath: double-sided

defaultPodOptions:
  podSecurityContext:
    runAsUser: 997
    runAsGroup: 997
    fsGroup: 997
