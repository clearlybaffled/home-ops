## Official nextcloud image version
## ref: https://hub.docker.com/r/library/nextcloud/tags/
##
image:
  flavor: apache

## Allowing use of ingress controllers
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: true
  className: nginx
  annotations:
    hajimari.io/icon: simple-icons:nextcloud
    nginx.ingress.kubernetes.io/proxy-body-size: "10G"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/server-snippet: |-
      server_tokens off;
      proxy_hide_header X-Powered-By;
      rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
      rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
      rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
      rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
      location = /.well-known/carddav {
        return 301 $scheme://$host/remote.php/dav;
      }
      location = /.well-known/caldav {
        return 301 $scheme://$host/remote.php/dav;
      }
      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }
      location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
        deny all;
      }
      location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
        deny all;
      }
  tls:
    - secretName: nextcloud-tls
      hosts:
        - &host nextcloud.seawolf.hermleigh.home
        - nextcloud.seawolf
  labels: {}
  path: /
  pathType: Prefix

nextcloud:
  host: *host
  ## Use an existing secret
  existingSecret:
    enabled: true
    secretName: nextcloud-secret
    usernameKey: nextcloud-username
    passwordKey: nextcloud-password

  # Default config files
  # IMPORTANT: Will be used only if you put extra configs, otherwise default will come from nextcloud itself
  # Default confgurations can be found here: https://github.com/nextcloud/docker/tree/master/27/apache/config
  defaultConfigs:
    # To protect /var/www/html/config
    .htaccess: true
    # Redis default configuration
    redis.config.php: true
    # Apache configuration for rewrite urls
    apache-pretty-urls.config.php: true
    # Define APCu as local cache
    apcu.config.php: true
    # Apps directory configs
    apps.config.php: true
    # Used for auto configure database
    autoconfig.php: true
    # SMTP default configuration
    smtp.config.php: false

  # # Extra config files created in /var/www/html/config/
  # # ref: https://docs.nextcloud.com/server/15/admin_manual/configuration_server/config_sample_php_parameters.html#multiple-config-php-file
  configs:
    network.config.php: |-
      <?php
        $CONFIG = array (
          "trusted_domains" =>
            array (
              0 => 'localhost',
              1 => 'nextcloud.seawolf.hermleigh.home',
              2 => 'nextcloud.seawolf'
          ),
          "overwrite.cli.url" => 'https://nextcloud.seawolf.hermleigh.home',
          "overwriteprotocol" => 'https',
          "trusted_proxies" =>
            array (
              0 => '10.233.64.239',
              1 => '10.233.64.1'
            )
        );

  ##
  ## Extra environment variables
  extraEnv:
    # - name: REDIS_HOST
    #   value: redis.db
    # - name: REDIS_HOST_PASSWORD
    #   valueFrom:
    #     secretKeyRef:
    #       name: nextcloud-secret
    #       key: redis-password
    - name: TZ
      value: America/New_York

  # Extra mounts for the pods. Example shown is for connecting a legacy NFS volume
  # to NextCloud pods in Kubernetes. This can then be configured in External Storage
  extraVolumes:
  - name: shared
    persistentVolumeClaim:
      claimName: shared-files-services
  - name: videos
    persistentVolumeClaim:
      claimName: videos-services
  extraVolumeMounts:
  - name: shared
    mountPath: "/shared"
  - name: videos
    mountPath: /videos

internalDatabase:
  enabled: false

externalDatabase:
  enabled: true
  ## Supported database engines: mysql or postgresql
  type: mysql
  ## Database host
  host: mysql.db
  ## Database name
  database: nextcloud
  ## Use a existing secret
  existingSecret:
    enabled: true
    secretName: nextcloud-secret
    usernameKey: db-username
    passwordKey: db-password

mariadb:
  enabled: false
redis:
  enabled: false

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  # Nextcloud Data (/var/www/html)
  enabled: true
  storageClass: "ceph-block"
  accessMode: ReadWriteOnce
  size: 8Gi

  ## Use an additional pvc for the data directory rather than a subpath of the default PVC
  ## Useful to store data on a different storageClass (e.g. on slower disks)
  nextcloudData:
    enabled: true
    storageClass: "ceph-filesystem"
    accessMode: ReadWriteMany
    size: 50Gi

startupProbe:
  enabled: true
  periodSeconds: 30

## Prometheus Exporter / Metrics
##
metrics:
  enabled: true

  replicaCount: 1
  # The metrics exporter needs to know how you serve Nextcloud either http or https
  https: false
  # Use API token if set, otherwise fall back to password authentication
  # https://github.com/xperimental/nextcloud-exporter#token-authentication
  # Currently you still need to set the token manually in your nextcloud install
  token: ""
  timeout: 5s
  # if set to true, exporter skips certificate verification of Nextcloud server.
  tlsSkipVerify: false

  image:
    repository: xperimental/nextcloud-exporter
    tag: 0.6.0
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9205"
    labels: {}
